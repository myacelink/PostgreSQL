복제 설정은 내장 스트리밍 복제 기능의 동작을 제어합니다(섹션 26.2.5 참조). 서버는 마스터 또는 대기 서버가됩니다. 마스터는 데이터를 보낼 수 있지만 대기는 항상 복제된 데이터의 수신자입니다.  cascading(계단식) 복제(26.2.7 절 참조)를 사용하는 경우 대기 서버는 송신자일뿐만 아니라 수신자일 수도 있습니다. 매개 변수는 주로 송신 및 대기 서버용이지만 일부 매개 변수는 마스터 서버에서만 의미가 있습니다. 필요한 경우 문제없이 클러스터 전체에서 설정이 다를 수 있습니다.
Section 26.2.5 : https://www.postgresql.org/docs/12/warm-standby.html#STREAMING-REPLICATION
Section 26.2.7 : https://www.postgresql.org/docs/12/warm-standby.html#CASCADING-REPLICATION

◼︎ Sending Servers
이러한 매개 변수는 복제 데이터를 하나 이상의 대기 서버로 전송하는 모든 서버에서 설정할 수 있습니다. 마스터는 항상 송신 서버이므로 이러한 매개 변수는 항상 마스터에서 설정해야합니다. 이러한 매개 변수의 역할과 의미는 대기가 마스터가 된 후에도 변경되지 않습니다.

max_wal_senders (integer)
대기 서버 또는 스트리밍 기본 백업 클라이언트의 최대 동시 연결 수(즉, 동시에 실행되는 WAL 송신자 프로세스의 최대 수)를 지정합니다. 기본값은 10입니다. 값 0은 복제가 비활성화되었음을 의미합니다. 갑작스러운 스트리밍 클라이언트 연결 해제는 시간 초과에 도달할 때까지 고아 연결 슬롯을 남겨둘 수 있으므로 연결이 끊어진 클라이언트가 즉시 다시 연결할 수 있도록 이 매개 변수를 예상 클라이언트의 최대 수보다 약간 높게 설정해야합니다. 이 매개 변수는 서버 시작시에만 설정할 수 있습니다. 또한 wal_level을 replica 이상으로 설정하여 대기 서버에서 연결을 허용해야합니다.
대기 서버를 실행할 때 이 매개 변수를 마스터 서버와 같거나 더 높은 값으로 설정해야합니다. 그렇지 않으면 대기 서버에서 쿼리가 허용되지 않습니다.

max_replication_slots (integer)
서버가 지원할 수 있는 최대 복제 슬롯 수(26.2.6 절 참조)를 지정합니다. 기본값은 10입니다.이 매개 변수는 서버 시작시에만 설정할 수 있습니다. 현재 존재하는 복제 슬롯 수보다 낮은 값으로 설정하면 서버가 시작되지 않습니다. 또한 복제 슬롯을 사용할 수 있도록 wal_level을 replica 이상으로 설정해야합니다.
26.2.6 : https://www.postgresql.org/docs/12/warm-standby.html#STREAMING-REPLICATION-SLOTS

구독자 측에서 동시에 추적할 수 있는 복제 원본(49 장 참조) 수를 지정하여 서버에서 생성할 수있는 논리적 복제 구독 수를 효과적으로 제한합니다. 현재 추적된 복제 오리진(origins) 수 보다 낮은 값을 설정하면 (pg_replication_origin이 아닌 pg_replication_origin_status에 반영됨) 서버가 시작되지 않습니다.
49장 : https://www.postgresql.org/docs/12/replication-origins.html

wal_keep_segments (integer)
standby 서버가 스트리밍 복제를 위해 이를(log file segments) 가져와야 하는 경우 pg_wal 디렉토리에 보관 된 과거 로그 파일 세그먼트의 최소 수를 지정합니다. 각 세그먼트는 일반적으로 16MB입니다. 송신 서버에 연결된 대기 서버가 wal_keep_segments 세그먼트보다 더 많이 뒤쳐지면 송신 서버는 대기에 여전히 필요한 WAL 세그먼트를 제거할 수 있으며,이 경우 복제 연결이 종료됩니다. 결과적으로 다운 스트림 연결도 결국 실패합니다. (단, WAL 아카이브를 사용중인 경우에는 아카이브에서 세그먼트를 가져와 대기 서버가 복구할 수 있습니다.)
이것은 pg_wal에 유지되는 최소 세그먼트 수만 설정합니다. 시스템은 WAL 보관을 위해 더 많은 세그먼트를 유지하거나 체크 포인트에서 복구해야 할 수 있습니다. wal_keep_segments가 0 (기본값)이면 시스템은 대기 목적으로 추가 세그먼트를 유지하지 않으므로, 대기 서버에서 사용할 수있는 이전 WAL 세그먼트의 수는 이전 체크 포인트의 위치 및 WAL 보관 상태의 함수입니다. 이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다.

wal_sender_timeout (integer)
이 시간보다 오랫동안 비활성 상태인 복제 연결을 종료합니다. 이것은 송신 서버가 대기 충돌 또는 네트워크 중단을 감지하는 데 유용합니다. 이 값이 단위없이 지정되면 밀리 초로 간주됩니다. 기본값은 60초입니다. 값이 0이면 시간 초과 메커니즘이 비활성화됩니다.
여러 지리적 위치에 분산된 클러스터에서 위치별로 서로 다른 값을 사용하면 클러스터 관리에 더 많은 유연성이 제공됩니다. 더 작은 값은 대기 시간이 짧은 네트워크 연결을 사용하는 대기에서 더 빠른 실패 감지에 유용하고 큰 값은 대기 시간이 긴 네트워크 연결을 사용하여 원격 위치에있는 경우 대기 상태를 더 잘 판단하는 데 도움이됩니다.

track_commit_timestamp (boolean)
트랜잭션 커밋 시간을 기록합니다. 이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다. 기본값은 off입니다.

◼︎ Master Server
이러한 매개 변수는 복제 데이터를 하나 이상의 대기 서버로 보낼 마스터 / 기본 서버에서 설정할 수 있습니다. 이러한 매개 변수 외에도 wal_level은 마스터 서버에서 적절하게 설정되어야 하며 선택적으로 WAL 아카이브도 활성화할 수 있습니다 (19.5.3 절 참조). 대기 서버에서 이러한 매개 변수의 값은 상관이 없지만 대기 서버가 마스터가 될 가능성에 대비하여 설정하는 것이 좋습니다.

synchronous_standby_names (string)
섹션 26.2.8에 설명 된대로 동기 복제를 지원할 수있는 standby 서버 목록을 지정합니다. 하나 또는 그 이상의 active synchronous(동기) standby 서버들이 있습니다. 커밋을 기다리는 트랜잭션은 이러한 standby 서버가 데이터 수신을 확인한 후에 진행할 수 있습니다. synchronous standbys(동기 스탠바이 서버들)는 이 목록에 이름이 표시되며, 현재 연결되어 있고 실시간으로 데이터를 스트리밍하는 서버들입니다(pg_stat_replication보기에서 스트리밍 상태로 표시됨). 둘 이상의 동기식 대기를 지정하면 매우 높은 가용성과 데이터 손실 방지가 가능합니다.
섹션 26.2.8 : https://www.postgresql.org/docs/12/warm-standby.html#SYNCHRONOUS-REPLICATION
이를 위한 standby 서버의 이름은 대기의 연결 정보에 설정된 대기의 application_name 설정입니다. 물리적 복제 대기의 경우 primary_conninfo 설정에서 설정해야 합니다. 기본값은 설정된 경우 cluster_name의 설정이고 그렇지 않은 경우 walreceiver입니다. 논리적 복제의 경우 구독의 연결 정보에 설정할 수 있으며 기본값은 구독 이름입니다. 다른 복제 스트림 소비자의 경우 해당 설명서를 참조합니다.

이 매개 변수는 다음 구문 중 하나를 사용하여 대기 서버 목록을 지정합니다.
[FIRST] num_sync ( standby_name [, ...] )
ANY num_sync ( standby_name [, ...] )
standby_name [, ...]
여기서 num_sync는 트랜잭션이 응답을 기다려야하는 synchronous standbys(동기 스탠바이서버들)의 수이고 standby_name은 대기 서버의 이름입니다. FIRST 및 ANY는 나열된 서버에서 synchronous standbys(동기 스탠바이서버들)를 선택하는 방법을 지정합니다.
num_sync와 결합 된 키워드 FIRST는 우선 순위 기반 동기 복제를 지정하고 WAL 레코드가 우선 순위에 따라 선택된 num_sync 동기 대기에 복제 될 때까지 트랜잭션 커밋을 대기시킵니다. 예를 들어 FIRST 3 (s1, s2, s3, s4)으로 설정하면 각 커밋이 대기 서버 s1, s2, s3 및 s4에서 선택한 세 개의 더 높은 우선 순위 대기에서 응답을 기다립니다. 이름이 목록의 앞부분에 나타나는 대기에는 더 높은 우선 순위가 부여되며 동기식으로 간주됩니다. 이 목록의 뒷부분에 나타나는 다른 대기 서버는 잠재적인 동기 대기를 나타냅니다. 어떤 이유로든 현재 동기식 대기중 하나라도 연결이 끊어지면 다음으로 우선 순위가 높은 대기로 즉시 교체됩니다. 키워드 FIRST는 선택 사항입니다.
num_sync와 결합된 키워드 ANY는 쿼럼 기반 동기 복제를 지정하고 WAL 레코드가 최소한 num_sync 나열된 대기에 복제될 때까지 트랜잭션 커밋을 대기시킵니다. 예를 들어, ANY 3 (s1, s2, s3, s4)으로 설정하면 s1, s2, s3 및 s4의 3개 대기가 응답하자마자 각 커밋이 진행됩니다.
FIRST 및 ANY는 대소문자를 구분하지 않습니다. 이러한 키워드가 standby 서버의 이름으로 사용되는 경우 해당 standby_name은 큰 따옴표로 묶어야합니다.
세 번째 구문은 PostgreSQL 버전 9.6 이전에 사용되었으며 여전히 지원됩니다. FIRST 및 num_sync가 1인 첫 번째 구문과 동일합니다. 예를 들어 FIRST 1 (s1, s2) 및 s1, s2는 동일한 의미를 갖습니다. s1 또는 s2가 동기 대기로 선택됩니다.
특수 항목 *는 모든 대기 이름과 일치합니다.
대기 이름의 고유성을 적용하는 메커니즘은 없습니다. 중복되는 경우 일치하는 대기 중 하나가 더 높은 우선 순위로 간주되지만 정확히 어느 것이 불확실한지 여부가 결정됩니다.

참고사항
각 standby_name은 *이 아닌 경우 유효한 SQL 식별자 형식이어야 합니다. 필요한 경우 큰 따옴표를 사용할 수 있습니다. 그러나 standby_names는 큰 따옴표이든 아니든 대소 문자를 구분하지 않고 대기 애플리케이션 이름과 비교됩니다.

여기에 synchronous standby(동기 대기) 이름이 지정되지 않은 경우 동기 복제가 활성화되지 않고 트랜잭션 커밋이 복제를 기다리지 않습니다. 이것이 기본 구성입니다. 동기 복제가 활성화 된 경우에도 synchronous_commit 매개 변수를 local 또는 off로 설정하여 복제를 기다리지 않도록 개별 트랜잭션을 구성할 수 있습니다.
이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다.
VACUUM 및 HOT업데이트가 사용 불능 행 버전의 정리를 연기하는 트랜잭션 수를 지정합니다. 기본값은 zero(0) 트랜잭션인데, 이 의미는 데드 로우(dead row)은 가능한 제거가 되고,이것은 열린 트랙잭션의 어떤것도 더이상 볼수 없다는것을 의미합니다. 섹션 26.5에 설명 된대로 hot standby(핫 스탠바이) 서버들를 지원하는 primary server(주 서버)에서 이 값을 0이 아닌 값으로 설정할 수 있습니다. 이렇게하면 행의 조기 정리로 인한 충돌없이 standby(대기)에서 쿼리를 완료하는 데 더 많은 시간이 걸립니다. 그러나 이 값은 기본 서버에서 발생하는 쓰기 트랜잭션 수로 측정되기 때문에 대기 쿼리에 사용할 수 있는 추가 유예 시간을 예측하기가 어렵습니다. 이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다.
이 매개 변수를 사용하는 대신 대기 서버에서 hot_standby_feedback을 설정하는 것도 고려해야합니다.
이것은 old_snapshot_threshold에 지정된 기간에 도달 한 죽은 행의 정리를 방지하지 않습니다.

◼︎ 대기 서버
이러한 설정은 복제 데이터를 수신하는 대기 서버의 동작을 제어합니다. 마스터 서버의 값은 관련이 없습니다.

primary_conninfo (string)
대기 서버가 송신 서버와 연결하는 데 사용할 연결 문자열을 지정합니다. 이 문자열은 섹션 33.1.1에 설명된 형식입니다. 이 문자열에 옵션이 지정되지 않은 경우 해당 환경 변수(섹션 33.14 참조)가 확인됩니다. 환경 변수도 설정되지 않은 경우 기본값이 사용됩니다.
연결 문자열은 보내는 서버의 호스트 이름(또는 주소)을 지정해야 하며 대기 서버의 기본값과 동일하지 않은 경우 포트 번호를 지정해야 합니다. 또한 보내는 서버에서 적절한 권한이 있는 역할에 해당하는 사용자 이름을 지정합니다(섹션 26.2.5.1 참조). 발신자가 비밀번호 인증을 요구하는 경우 비밀번호도 제공해야 합니다. primary_conninfo 문자열이나 대기 서버의 별도 ~/.pgpass 파일에서 제공될 수 있습니다(데이터베이스 이름으로 복제 사용). primary_conninfo 문자열에 데이터베이스 이름을 지정하지 마십시오.
이 매개변수는 서버 시작 시에만 설정할 수 있습니다. 서버가 대기 모드가 아닌 경우 이 설정은 적용되지 않습니다.

standby 서버가 송신 서버와 연결하는데 사용할 연결 문자열을 지정합니다. 이 문자열은 섹션 33.1.1에 설명된 형식입니다. 이 문자열에 지정되지 않은 옵션이 있으면 해당 환경 변수 (33.14 절 참조)가 확인됩니다. 환경 변수도 설정되지 않은 경우 기본값이 사용됩니다.
33.1.1 : https://www.postgresql.org/docs/12/libpq-connect.html#LIBPQ-CONNSTRING
33.14 : https://www.postgresql.org/docs/12/libpq-envars.html


연결 문자열은 송신 서버의 호스트 이름(또는 주소)과 대기 서버의 기본값과 동일하지 않은 경우 포트 번호를 지정해야합니다. 또한 보내는 서버에서 적절한 권한이 있는 역할에 해당하는 사용자 이름을 지정합니다(26.2.5.1 절 참조). 보낸 사람이 암호 인증을 요구하는 경우 암호도 제공해야 합니다. primary_conninfo 문자열 또는 standby 서버의 계정 홈 디렉토리에 .pgpass 파일로 제공될 수 있습니다(복제를 데이터베이스 이름으로 사용). primary_conninfo 문자열에 데이터베이스 이름을 지정하면 안됩니다.
26.2.5.1 : https://www.postgresql.org/docs/12/warm-standby.html#STREAMING-REPLICATION-AUTHENTICATION

이 매개 변수는 서버 시작시에만 설정할 수 있습니다. 이 설정은 서버가 대기 모드가 아닌 경우에는 적용되지 않습니다.

primary_slot_name (string)
선택적으로 스트리밍 복제를 통해 송신 서버에 연결할 때 사용할 기존 복제 슬롯을 지정하여 업스트림 노드에서 리소스 제거를 제어합니다(26.2.6 절 참조). 이 매개 변수는 서버 시작시에만 설정할 수 있습니다. primary_conninfo가 설정되지 않은 경우 이 설정은 적용되지 않습니다.

promote_trigger_file (string)
존재가 standby에서 복구를 종료하는 트리거 파일을 지정합니다. 이 값이 설정되지 않은 경우에도 pg_ctl 승격을 사용하거나 pg_promote를 호출하여 standby를 승격할 수 있습니다. 이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다.

hot_standby (boolean)
26.5 절에 설명한것처럼 복구 중에 쿼리를 연결하고 실행할 수 있는지 여부를 지정합니다. 기본값은 on입니다. 이 매개 변수는 서버 시작시에만 설정할 수 있습니다. 아카이브 복구중 또는 대기 모드에서만 효과가 있습니다.

max_standby_archive_delay (integer)
Hot Standby가 활성화된 경우 이 매개 변수는 섹션 26.5.2에 설명된대로 적용 예정 WAL 항목과 충돌하는 대기 쿼리를 취소하기 전에 대기 서버가 대기해야하는 시간을 결정합니다. max_standby_archive_delay는 WAL 데이터를 WAL 아카이브에서 읽을 때 적용됩니다 (따라서 최신이 아님). 이 값이 단위없이 지정되면 밀리초로 간주됩니다. 기본값은 30 초입니다. -1값을 사용하면 충돌하는 쿼리가 완료될 때까지 standby가 영원히 대기할 수 있습니다. 이 매개 변수는 postgresql.conf 파일 또는 서버 명령줄에서만 설정할 수 있습니다.
섹션 26.5.2 : https://www.postgresql.org/docs/12/hot-standby.html#HOT-STANDBY-CONFLICT
max_standby_archive_delay는 취소전에 쿼리를 실행할 수 있는 최대 시간과 동일하지 않습니다. 오히려 한 WAL 세그먼트의 데이터를 적용할 수 있는 최대 총 시간입니다. 따라서 한 쿼리로 인해 WAL 세그먼트에서 더 일찍 상당한 지연이 발생하면 이후 충돌하는 쿼리의 유예 시간이 훨씬 줄어 듭니다.

max_standby_streaming_delay (integer)
Hot Standby가 활성화 된 경우 이 매개 변수는 섹션 26.5.2에 설명된대로 적용 예정 WAL 항목과 충돌하는 대기 쿼리를 취소하기 전에 대기 서버가 대기해야 하는 시간을 결정합니다. max_standby_streaming_delay는 스트리밍 복제를 통해 WAL 데이터를 수신할 때 적용됩니다. 이 값이 단위없이 지정되면 밀리초로 간주됩니다. 기본값은 30 초입니다. -1 값을 사용하면 충돌하는 쿼리가 완료될 때까지 대기가 영원히 대기할 수 있습니다. 이 매개 변수는 postgresql.conf 파일 또는 서버 명령줄에서만 설정할 수 있습니다.

max_standby_streaming_delay는 취소전에 쿼리를 실행할 수 있는 최대 시간과 동일하지 않습니다. 오히려 주 서버에서 수신된 WAL 데이터를 적용할 수 있는 최대 총 시간입니다. 따라서 하나의 쿼리로 인해 상당한 지연이 발생하면 이후 충돌하는 쿼리는 대기 서버가 다시 따라 잡을 때까지 유예 시간이 훨씬 줄어 듭니다.

wal_receiver_status_interval (integer)
pg_stat_replication 뷰를 사용하여 볼수 있는 기본 또는 업스트림 standby로 복제 진행에 대한 정보를 전송하기 위해 standby에서 WAL 수신기 프로세스에 대한 최소 빈도를 지정합니다. standby는 기록한 마지막 write-ahead log 위치, 디스크에 플러시 한 마지막 위치 및 적용된 마지막 위치를 보고합니다. 이 매개 변수의 값은 보고서 사이의 최대 시간입니다. 쓰기 또는 비우기 위치가 변경될 때마다, 또는 적어도 이 매개 변수에 지정된 횟수만큼 업데이트가 전송됩니다. 따라서 적용 위치가 실제 위치보다 약간 뒤처질 수 있습니다. 이 값이 단위없이 지정되면 초로 간주됩니다. 기본값은 10 초입니다. 이 매개 변수를 0으로 설정하면 상태 업데이트가 완전히 비활성화됩니다. 이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다.

hot_standby_feedback (boolean)
상시 대기가 현재 대기에서 실행중인 쿼리에 대한 피드백을 기본 또는 업스트림 대기로 보낼지 여부를 지정합니다. 이 매개 변수는 정리 레코드로 인한 쿼리 취소를 제거하는 데 사용할 수 있지만 일부 워크로드의 경우 기본에서 데이터베이스 팽창을 유발할 수 있습니다. 피드백 메시지는 wal_receiver_status_interval당 한번이상 전송되지 않습니다. 기본값은 꺼짐입니다. 이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다.
계단식 복제가 사용중인 경우 피드백은 결국 기본에 도달할 때까지 업스트림으로 전달됩니다. 대기 모드는 업스트림을 전달하는것 외에 수신한 피드백을 사용하지 않습니다.
이 설정은 기본에서 old_snapshot_threshold의 동작을 재정의하지 않습니다. 기본의 수명 임계 값을 초과하는 대기의 스냅샷은 무효화되어 대기에서 트랜잭션이 취소될 수 있습니다. 이는 old_snapshot_threshold가 사용불능 행이 팽창에 기여할 수 있는 시간에 대한 절대 제한을 제공하기위한 것이기 때문입니다. 그렇지 않으면 대기 구성으로 인해 위반됩니다.

wal_receiver_timeout (integer)
이 시간보다 오랫동안 비활성 상태인 복제 연결을 종료합니다. 이는 수신 대기 서버가 기본 노드 충돌 또는 네트워크 중단을 감지하는 데 유용합니다. 이 값이 단위없이 지정되면 밀리초로 간주됩니다. 기본값은 60 초입니다. 값이 0이면 시간 초과 메커니즘이 비활성화됩니다. 이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다.

wal_retrieve_retry_interval (integer)
WAL 데이터 검색을 다시 시도하기 전에 어떤 소스(스트리밍 복제, 로컬 pg_wal 또는 WAL 아카이브)에서 WAL 데이터를 사용할 수 없을 때 standby 서버가 대기해야하는 시간을 지정합니다. 이 값이 단위없이 지정되면 밀리 초로 간주됩니다. 기본값은 5초입니다. 이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다.
이 매개 변수는 복구중인 노드가 새 WAL 데이터를 사용할 수 있을 때까지 대기하는 시간을 제어해야하는 구성에서 유용합니다. 예를 들어, 아카이브 복구에서 이 매개 변수의 값을 줄임으로써 새 WAL 로그 파일을 감지 할 때 복구의 응답성을 높일 수 있습니다. WAL 활동이 적은 시스템에서 이를 늘리면 WAL 아카이브에 액세스하는 데 필요한 요청의 양이 줄어 듭니다. 예를 들어 인프라에 액세스하는 횟수를 고려하는 클라우드 환경에서 유용합니다.

recovery_min_apply_delay (integer)
기본적으로 대기 서버는 가능한 한 빨리 송신 서버에서 WAL 레코드를 복원합니다. 데이터 손실 오류를 수정할 수 있는 기회를 제공하여 시간 지연된 데이터 사본을 보유하는 것이 유용할 수 있습니다. 이 매개 변수를 사용하면 지정된 시간만큼 복구를 지연시킬 수 있습니다. 예를 들어, 이 매개 변수를 5min으로 설정하면 대기의 시스템 시간이 마스터가 보고 한 커미트 시간보다 5분 이상 지난 경우에만 대기가 각 트랜잭션 커밋을 재생합니다. 이 값이 단위없이 지정되면 밀리초로 간주됩니다. 기본값은 0이며 지연을 추가하지 않습니다.
서버간 복제 지연이 이 매개 변수의 값을 초과할 수 있으며, 이 경우 지연이 추가되지 않습니다. 지연은 마스터에 기록된 WAL 타임 스탬프와 대기의 현재 시간 사이에 계산됩니다. 네트워크 지연 또는 계단식 복제 구성으로 인해 전송이 지연되면 실제 대기 시간이 크게 줄어들 수 있습니다. 마스터와 대기의 시스템 시계가 동기화되지 않으면 예상보다 빨리 레코드를 적용하여 복구할 수 있습니다. 그러나 이 매개 변수의 유용한 설정이 서버 간의 일반적인 시간 편차보다 훨씬 크기 때문에 이는 큰 문제가 아닙니다.
지연은 트랜잭션 커밋에 대한 WAL 레코드에서만 발생합니다. 다른 레코드는 가능한 한 빨리 재생됩니다. MVCC 가시성 규칙은 해당 커밋 레코드가 적용될 때까지 효과가 보이지 않도록 보장하기 때문에 문제가되지 않습니다.
대기 상태가 승격되거나 트리거될 때까지 복구중인 데이터베이스가 일관된 상태에 도달하면 지연이 발생합니다. 그 후 대기는 더 이상 기다리지 않고 복구를 종료합니다.
이 매개 변수는 스트리밍 복제 배포에 사용하기 위한 것입니다. 그러나 매개 변수가 지정되면 응급 복구를 제외한 모든 경우에 적용됩니다. 이 기능을 사용하면 hot_standby_feedback이 지연되어 마스터가 부풀어 오를 수 있습니다. 둘 다주의해서 함께 사용해야합니다.

주의
동기 복제는 synchronous_commit이 remote_apply로 설정된 경우 이 설정의 영향을 받습니다. 모든 COMMIT는 적용될 때까지 기다려야합니다.

이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다.

◼︎ 구독자
이러한 설정은 논리적 복제 subscriber(구독자:slave)의 동작을 제어합니다. publisher(게시자:master)의 값들은 관련이 없습니다.
wal_receiver_timeout, wal_receiver_status_interval 및 wal_retrieve_retry_interval 구성 매개 변수는 논리적 복제 작업자에 영향을 미칩니다.

max_logical_replication_workers (int)
최대 논리적 복제 작업자 수를 지정합니다. 여기에는 apply worker(적용 작업자)와 table synchronization worker(테이블 동기화 작업자)가 모두 포함됩니다.
논리적 복제 작업자는 max_worker_processes에서 정의한 풀에서 가져옵니다.
기본값은 4입니다.

max_sync_workers_per_subscription (integer)
subscription(구독) 당 최대 동기화 worker(작업자) 수입니다. 이 매개 변수는 subscription(구독) 초기화 중 또는 새 테이블이 추가될 때 초기 데이터 사본의 병렬 처리량을 제어합니다.
현재는 테이블당 하나의 동기화 작업자만 있을 수 있습니다.
동기화 작업자는 max_logical_replication_workers에서 정의한 풀에서 가져옵니다.
기본값은 2입니다.
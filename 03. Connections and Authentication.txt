◼︎ 접속 설정
listen_addresses (string)
서버가 클라이언트 응용 프로그램의 연결을 수신할 TCP / IP주소를 지정합니다. 값은 쉼표로 구분 된 호스트 이름 또는 숫자 IP 주소 목록의 형식을 취합니다.
특수 항목인 *는 사용 가능한 모든 IP 인터페이스에 해당합니다. 0.0.0.0 항목은 모든 IPv4 주소 수신을 허용하고 ::는 모든 IPv6 주소 수신을 허용합니다.
목록이 비어 있으면 서버는 IP 인터페이스를 전혀 수신하지 않습니다. 이 경우 Unix 도메인 소켓만 연결에 사용할 수 있습니다.
기본값은 localhost이며 로컬 TCP/IP 루프백 연결만 허용합니다.
클라이언트 인증에서는(클라이언트인증:https://www.postgresql.org/docs/12/client-authentication.html)
서버에 액세스 할 수 있는 사람을 세밀하게 제어할 수 있지만 listen_addresses는 연결 시도를 허용하는 인터페이스를 제어하므로 안전하지 않은 네트워크 인터페이스에서
반복되는 악성 연결 요청을 방지할 수 있습니다. 이 매개 변수는 서버 시작시에만 설정할 수 있습니다.

port (integer)
서버가 수신하는 TCP 포트입니다. 기본적으로 5432입니다. 서버가 수신하는 모든 IP 주소에 동일한 포트 번호가 사용됩니다.
이 매개 변수는 서버 시작시에만 설정할 수 있습니다.

max_connections (integer)
데이터베이스 서버에 대한 최대 동시 연결 수를 결정합니다. 기본값은 일반적으로 100 개의 연결이지만 커널 설정이 이를 지원하지 않는 경우에는 더 적을 수 있습니다 (initdb 중에 결정됨).
이 매개 변수는 서버 시작시에만 설정할 수 있습니다.

대기 서버를 실행할 때 이 매개 변수를 마스터 서버와 같거나 더 높은 값으로 설정해야합니다. 그렇지 않으면 대기 서버에서 쿼리가 허용되지 않습니다.

superuser_reserved_connections (integer)
PostgreSQL 수퍼 유저의 연결을 위해 예약된 연결 "슬롯"수를 결정합니다. 최대 max_connections 연결은 동시에 활성화 될 수 있습니다.
활성 동시 연결 수가 최소 max_connections에서 superuser_reserved_connections를 뺀 값이면 수퍼 유저에 대해서만 새 연결이 허용되고 새 복제 연결은 허용되지 않습니다.
기본값은 3개의 연결입니다. 값은 max_connections보다 작아야 합니다. 이 매개 변수는 서버 시작시에만 설정할 수 있습니다.

unix_socket_directories (string)
서버가 클라이언트 응용 프로그램의 연결을 수신할 Unix 도메인 소켓의 디렉토리를 지정합니다.
쉼표로 구분된 여러 디렉토리를 나열하여 여러 소켓을 만들 수 있습니다. 항목 사이의 공백은 무시됩니다.
이름에 공백이나 쉼표를 포함해야 하는 경우 디렉토리 이름을 큰 따옴표로 묶습니다. 빈 값은 Unix 도메인 소켓에서 수신 대기하지 않음을 지정합니다.
이 경우 TCP/IP 소켓만 서버에 연결하는 데 사용할 수 있습니다. 기본값은 일반적으로 /tmp이지만 빌드시 변경할 수 있습니다. 이 매개 변수는 서버 시작시에만 설정할 수 있습니다.

.s.PGSQL.nnnn (nnnn은 서버의 포트 번호)이라는 소켓 파일 자체 외에도 각 unix_socket_directories 디렉토리에 .s.PGSQL.nnnn.lock이라는 일반 파일이 생성됩니다.
두 파일 모두 수동으로 제거해서는 안됩니다.
이 매개 변수는 Unix 도메인 소켓이 없는 Windows에서는 관련이 없습니다.

unix_socket_group (string)
Unix 도메인 소켓의 소유 그룹을 설정합니다. (소켓의 소유 사용자는 항상 서버를 시작하는 유저입니다.)
매개 변수 unix_socket_permissions와 결합하여 Unix 도메인 연결을 위한 추가 액세스 제어 메커니즘으로 사용할 수 있습니다.
기본적으로 이것은 서버 사용자의 기본 그룹을 사용하는 빈 문자열입니다. 이 매개 변수는 서버 시작시에만 설정할 수 있습니다.

이 액세스 제어 메커니즘은 20장에 설명 된 메커니즘과 독립적입니다.
(클라이언트인증:https://www.postgresql.org/docs/12/client-authentication.html)

이 매개 변수는 Unix 도메인 소켓이 없는 Windows에서는 관련이 없습니다.

unix_socket_permissions (integer)
Unix 도메인 소켓의 액세스 권한을 설정합니다. Unix 도메인 소켓은 일반적인 Unix 파일 시스템 권한 집합을 사용합니다.
매개 변수 값은 chmod 및 umask 시스템 호출에서 허용하는 형식으로 지정된 숫자 모드여야 합니다.
(일반적인 8 진수 형식을 사용하려면 숫자는 0(영)으로 시작해야합니다.)

기본 권한은 0777이며 누구나 연결할 수 있음을 의미합니다. 합리적인 대안은 0770 (사용자 및 그룹만, unix_socket_group 참조) 및 0700(사용자 만)입니다.
(Unix 도메인 소켓의 경우 쓰기 권한만 중요하므로 읽기 또는 실행 권한을 설정하거나 취소할 필요가 없습니다.)

이 액세스 제어 메커니즘은 20 장에 설명된 메커니즘과 독립적입니다.
이 매개 변수는 서버 시작시에만 설정할 수 있습니다.
이 매개 변수는 소켓 권한을 완전히 무시하는 시스템, 특히 Solaris 10의 Solaris에서는 관련이 없습니다.
거기에서 unix_socket_directories를 원하는 대상으로 제한된 검색 권한이 있는 디렉토리로 지정하여 유사한 효과를 얻을 수 있습니다.
이 매개 변수는 Unix 도메인 소켓이 없는 Windows에서도 관련이 없습니다.

bonjour (boolean)
Bonjour를 통해 서버의 존재를 알릴 수 있습니다. 기본값은 꺼짐입니다. 이 매개 변수는 서버 시작시에만 설정할 수 있습니다.

bonjour_name (string)
Bonjour 서비스 이름을 지정합니다. 이 매개 변수가 빈 문자열 ''(기본값)로 설정된 경우 컴퓨터 이름이 사용됩니다.
서버가 Bonjour 지원으로 컴파일되지 않은 경우 이 매개 변수는 무시됩니다. 이 매개 변수는 서버 시작시에만 설정할 수 있습니다.

tcp_keepalives_idle (integer)
네트워크 활동이 없는 상태에서 운영 체제가 TCP연결 유지 메시지를 클라이언트에 전송해야하는 시간을 지정합니다.
이 값이 단위없이 지정되면 초로 간주됩니다. 값 0 (기본값)은 운영 체제의 기본값을 선택합니다.
이 매개 변수는 TCP_KEEPIDLE 또는 이와 동등한 소켓 옵션을 지원하는 시스템 및 Windows에서만 지원됩니다.
다른 시스템에서는 0이어야 합니다. Unix 도메인 소켓을 통해 연결된 세션에서 이 매개 변수는 무시되고 항상 0으로 읽습니다.

Note
Windows에서 값을 0으로 설정하면이 매개 변수가 2 시간으로 설정됩니다. Windows는 시스템 기본값을 읽는 방법을 제공하지 않기 때문입니다.

tcp_keepalives_interval (integer)
클라이언트가 확인하지 않은 TCP 연결 유지 메시지를 재전송해야 하는 시간을 지정합니다. 이 값이 단위없이 지정되면 초로 간주됩니다.
값 0(기본값)은 운영 체제의 기본값을 선택합니다. 이 매개 변수는 TCP_KEEPINTVL 또는 이와 동등한 소켓 옵션을 지원하는 시스템 및 Windows에서만 지원됩니다. 다른 시스템에서는 0이어야 합니다. Unix 도메인 소켓을 통해 연결된 세션에서 이 매개 변수는 무시되고 항상 0으로 읽습니다.

Note
Windows에서 값을 0으로 설정하면 Windows가 시스템 기본값을 읽는 방법을 제공하지 않기 때문에이 매개 변수가 1 초로 설정됩니다.

tcp_keepalives_count (integer)
클라이언트에 대한 서버의 연결이 끊어진 것으로 간주되기 전에 손실될 수 있는 TCP 연결 유지 메시지 수를 지정합니다.
값 0(기본값)은 운영 체제의 기본값을 선택합니다. 이 매개 변수는 TCP_KEEPCNT 또는 동등한 소켓 옵션을 지원하는 시스템에서만 지원됩니다.
다른 시스템에서는 0이어야 합니다. Unix 도메인 소켓을 통해 연결된 세션에서이 매개 변수는 무시되고 항상 0으로 읽습니다.

Note
이 매개 변수는 Windows에서 지원되지 않으며 0이어야합니다.

tcp_user_timeout (integer)
TCP 연결이 강제로 닫히기 전에 전송된 데이터가 승인되지 않은 상태로 남아있을 수 있는 시간을 지정합니다. 이 값이 단위없이 지정되면 밀리초로 간주됩니다.
값 0(기본값)은 운영 체제의 기본값을 선택합니다. 이 매개 변수는 TCP_USER_TIMEOUT을 지원하는 시스템에서만 지원됩니다.
다른 시스템에서는 0이어야 합니다. Unix 도메인 소켓을 통해 연결된 세션에서 이 매개 변수는 무시되고 항상 0으로 읽습니다.

Note
이 매개 변수는 Windows에서 지원되지 않으며 0이어야합니다.

◼︎ Authentication
authentication_timeout (integer)
클라이언트 인증을 완료하는데 허용되는 최대 시간입니다. 예정된 클라이언트가 이 시간 동안 인증 프로토콜을 완료하지 않으면 서버는 연결을 닫습니다.
이것은 정지된 클라이언트가 연결을 무기한 점유하는 것을 방지합니다. 이 값이 단위없이 지정되면 초로 간주됩니다. 기본값은 1분 입니다.
이 매개 변수는 postgresql.conf 파일 또는 서버 명령줄에서만 설정할 수 있습니다.

password_encryption (enum)
CREATE ROLE 또는 ALTER ROLE에 암호가 지정된 경우 이 매개 변수는 암호(password)를 암호화(encrypt)하는데 사용할 알고리즘을 결정합니다.
기본값은 md5이며 암호를 MD5 해시로 저장합니다(on도 md5의 별칭으로 허용됨). 이 매개 변수를 scram-sha-256으로 설정하면 SCRAM-SHA-256으로 비밀번호가 암호화됩니다.
섹션 20.5를 참조하세요(https://www.postgresql.org/docs/12/auth-password.html)

이전 클라이언트는 SCRAM 인증 메커니즘에 대한 지원이 부족할 수 있으므로 SCRAM-SHA-256으로 암호화된 암호로 작동하지 않을 수 있습니다.

krb_server_keyfile (string)
서버의 Kerberos 키 파일 위치를 설정합니다. 기본값은 FILE : /usr/local/pgsql/etc/krb5.keytab입니다 (디렉토리 부분은 빌드시 sysconfdir로 지정된 항목입니다.
pg_config --sysconfdir을 사용하여 확인). 이 매개 변수가 빈 문자열로 설정되면 무시되고 시스템 종속 기본값이 사용됩니다.
이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다. 섹션 20.6을 참고하세요(https://www.postgresql.org/docs/12/gssapi-auth.html)

krb_caseins_users (boolean)
GSSAPI 사용자 이름을 대소 문자를 구분하지 않고 처리할지 여부를 설정합니다. 기본값은 해제입니다(대소 문자 구분).
이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다.

db_user_namespace (boolean)
이 매개 변수는 데이터베이스별 사용자 이름을 활성화합니다. 기본적으로 꺼져 있습니다.
이 매개 변수는 postgresql.conf 파일 또는 서버 명령줄에서만 설정할 수 있습니다.

이것이 켜져 있으면 사용자 이름 @dbname으로 사용자를 만들어야 합니다. 연결 클라이언트가 사용자 이름을 전달하면
@및 데이터베이스 이름이 사용자 이름에 추가되고 해당 데이터베이스 별 사용자 이름은 서버에서 조회됩니다.
SQL 환경 내에서 @이 포함된 이름으로 사용자를 만들 때 사용자 이름을 인용해야합니다.

이 매개 변수를 활성화해도 일반 글로벌 사용자를 생성할 수 있습니다. 클라이언트에서 사용자 이름을 지정할 때 @를 추가하기만 하면됩니다 (예 : joe @).
서버에서 사용자 이름을 조회하기 전에 @가 제거됩니다.

db_user_namespace는 클라이언트와 서버의 사용자 이름 표현을 다르게합니다. 인증 검사는 항상 서버의 사용자 이름으로 수행되므로
인증 방법은 클라이언트가 아닌 서버의 사용자 이름에 대해 구성되어야 합니다.
md5는 클라이언트와 서버 모두에서 사용자 이름을 솔트로 사용하기 때문에 md5는 db_user_namespace와 함께 사용할 수 없습니다.

Note
이 기능은 완전한 솔루션을 찾을때까지 임시 조치로 사용됩니다. 이때 이 옵션은 제거됩니다.

◼︎ SSL
ssl (boolean)
SSL 연결을 활성화 합니다. 이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다. 기본값은 꺼짐입니다.

ssl_ca_file (string)
SSL 서버 인증 기관(CA)이 포함된 파일의 이름을 지정합니다. 상대 경로는 데이터 디렉토리에 상대적입니다.
이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다. 기본값은 비어 있습니다.
즉, CA 파일이 로드되지 않고 클라이언트 인증서 확인이 수행되지 않습니다.

ssl_cert_file (string)
SSL 서버 인증서가 포함된 파일의 이름을 지정합니다. 상대 경로는 데이터 디렉토리에 상대적입니다.
이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다. 기본값은 server.crt입니다.

ssl_crl_file (string)
SSL 서버 인증서 폐기 목록 (CRL)이 포함된 파일의 이름을 지정합니다. 상대 경로는 데이터 디렉토리에 상대적입니다.
이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다. 기본값은 비어 있으며 CRL파일이 로드되지 않음을 의미합니다.

ssl_key_file (string)
SSL 서버 개인키가 포함된 파일의 이름을 지정합니다. 상대 경로는 데이터 디렉토리에 상대적입니다.
이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다. 기본값은 server.key입니다.

ssl_ciphers (string)

SSL 연결에서 사용할 수있는 SSL 암호 스위트 목록을 지정합니다. 이 설정의 구문과 지원되는 값 목록은 OpenSSL 패키지의 암호 매뉴얼 페이지를 참조합니다.
TLS 버전 1.2 이하를 사용하는 연결만 영향을받습니다. 현재 TLS 버전 1.3 연결에서 사용하는 암호 선택을 제어하는 설정은 없습니다.
기본값은 HIGH:MEDIUM:+3DES:!aNULL입니다. 특정 보안 요구 사항이 없는 한 기본값은 일반적으로 합리적인 선택입니다.

이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다.

기본값에 대한 설명 :
HIGH
HIGH 그룹의 암호를 사용하는 암호 제품군 (예 : AES, Camellia, 3DES)

MEDIUM
MEDIUM 그룹 (예 : RC4, SEED)의 암호를 사용하는 암호 제품군

+3DES
HIGH에 대한 OpenSSL 기본 순서는 AES128보다 높은 3DES를 주문하기 때문에 문제가 있습니다. 이는 3DES가 AES128보다 보안 수준이 낮고 속도도 훨씬 느리기 때문에 잘못된 것입니다.
+3DES는 다른 모든 HIGH 및 MEDIUM 암호 뒤에 다시 정렬합니다.

!aNULL
인증을 수행하지 않는 익명 암호 그룹을 비활성화합니다. 이러한 암호 그룹은 중간자 공격에 취약하므로 사용해서는 안됩니다.

사용 가능한 암호 제품군 세부 정보는 OpenSSL 버전에 따라 다릅니다.
현재 설치된 OpenSSL 버전에 대한 실제 세부 사항을 보려면 openssl ciphers -v 'HIGH : MEDIUM : + 3DES :! aNULL'명령을 사용하십시오.
이 목록은 서버 키 유형에 따라 런타임에 필터링됩니다.

ssl_prefer_server_ciphers(boolean)
클라이언트가 아닌 서버의 SSL 암호 기본 설정을 사용할지 여부를 지정합니다.
이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다. 기본값은 on입니다.

이전 PostgreSQL 버전에는이 설정이 없으며 항상 클라이언트의 기본 설정을 사용합니다. 이 설정은 주로 해당 버전과의 역 호환성을위한 것입니다.
서버가 적절하게 구성 될 가능성이 높기 때문에 서버의 기본 설정을 사용하는 것이 일반적으로 더 좋습니다.

ssl_ecdh_curve (string)
ECDH 키 교환에 사용할 곡선의 이름을 지정합니다. 연결하는 모든 클라이언트에서 지원해야합니다. 서버의 Elliptic Curve 키에서 사용하는 것과 동일한 곡선 일 필요는 없습니다.
이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다. 기본값은 prime256v1입니다.

가장 일반적인 곡선의 OpenSSL 이름은 prime256v1 (NIST P-256), secp384r1 (NIST P-384), secp521r1 (NIST P-521)입니다.
사용 가능한 곡선의 전체 목록은 openssl ecparam -list_curves 명령으로 표시 할 수 있습니다. 하지만 모두 TLS에서 사용할 수있는 것은 아닙니다.

ssl_min_protocol_version (enum)
사용할 최소 SSL/TLS 프로토콜 버전을 설정합니다. 현재 유효한 값은 TLSv1, TLSv1.1, TLSv1.2, TLSv1.3입니다.
이전 버전의 OpenSSL 라이브러리는 모든 값을 지원하지 않습니다. 지원되지 않는 설정을 선택하면 오류가 발생합니다. TLS 1.0 이전의 프로토콜 버전, 즉 SSL 버전 2 및 3은 항상 비활성화됩니다.

기본값은 TLSv1이며 주로 이전 버전의 OpenSSL 라이브러리를 지원합니다.
모든 소프트웨어 구성 요소가 최신 프로토콜 버전을 지원할 수 있는 경우 이 값을 더 높은 값으로 설정할 수 있습니다.

ssl_max_protocol_version (enum)
사용할 최대 SSL/TLS 프로토콜 버전을 설정합니다. 유효한 값은 ssl_min_protocol_version의 경우와 같으며 모든 프로토콜 버전을 허용하는 빈 문자열이 추가됩니다.
기본값은 모든 버전을 허용하는 것입니다. 최대 프로토콜 버전을 설정하는 것은 주로 테스트하거나 일부 구성 요소가 최신 프로토콜에서 작동하는 데 문제가 있는 경우 유용합니다.

ssl_dh_params_file (string)
SSL 암호의 임시 DH 계열에 사용되는 Diffie-Hellman 매개 변수가 포함된 파일의 이름을 지정합니다.
기본값은 비어 있으며, 이 경우 컴파일된 기본 DH매개 변수가 사용됩니다. 사용자 지정 DH 매개 변수를 사용하면 공격자가 잘 알려진 컴파일된 DH 매개 변수를 크래킹하는 경우 노출이 줄어 듭니다.
openssl dhparam -out dhparams.pem 2048 명령을 사용하여 고유한 DH 매개 변수 파일을 만들 수 있습니다.

이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다.

ssl_passphrase_command (문자열)
개인 키와 같은 SSL 파일 암호 해독을 위한 암호를 얻어야 할 때 호출할 외부 명령을 설정합니다. 기본적으로 이 매개 변수는 비어 있으며 이는 기본 제공 프롬프트 메커니즘이 사용됨을 의미합니다.

명령은 암호문을 표준 출력으로 인쇄하고 코드 0으로 종료해야합니다. 매개 변수 값에서 %p는 프롬프트 문자열로 대체됩니다.
(리터럴 %에 대해 %%를 씁니다.) 프롬프트 문자열에 공백이 포함되어있을 수 있으므로 적절하게 인용해야 합니다. 하나의 줄 바꿈이 있는 경우 출력 끝에서 제거됩니다.

이 명령은 실제로 사용자에게 암호를 묻지 않아도 됩니다. 파일에서 읽을 수 있고 키 체인 기능에서 얻을 수 있습니다.
선택한 메커니즘이 적절하게 안전한지 확인하는 것은 사용자에게 달려 있습니다.

이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다.

ssl_passphrase_command_supports_reload (boolean)
이 매개 변수는 키 파일에 암호가 필요한 경우 ssl_passphrase_command에 의해 설정된 암호 명령이 구성 다시로드 중에 호출되는지 여부를 결정합니다.
이 매개 변수가 꺼져 있으면 (기본값) 다시 로드하는 동안 ssl_passphrase_command가 무시되고 암호가 필요한 경우 SSL 구성이 다시 로드되지 않습니다.
이 설정은 프롬프트를 표시하기 위해 TTY가 필요한 명령에 적합하며 서버가 실행 중일 때는 사용할 수 없습니다.
예를 들어 파일에서 암호를 얻은 경우 이 매개 변수를 on으로 설정하는 것이 적절할 수 있습니다.

이 매개 변수는 postgresql.conf 파일 또는 서버 명령 줄에서만 설정할 수 있습니다.
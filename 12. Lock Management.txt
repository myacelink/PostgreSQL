deadlock_timeout(정수)
교착 상태가 있는지 확인하기 전에 잠금을 기다리는 시간입니다. 교착 상태 검사는 상대적으로 비용이 많이 들기 때문에 서버는 잠금을 기다릴 때마다 검사를 실행하지 않습니다.
우리는 교착 상태가 프로덕션 응용 프로그램에서 일반적이지 않다고 낙관적으로 가정하고 교착 상태를 확인하기 전에 잠시 동안 잠금을 대기합니다.
이 값을 늘리면 불필요한 교착 상태 검사에 낭비되는 시간이 줄어들지만 실제 교착 상태 오류 보고 속도가 느려집니다. 이 값이 단위 없이 지정되면 밀리초로 간주됩니다.
기본값은 1초(1s)이며, 이는 아마도 실제로 원하는 가장 작은 값일 것입니다. 로드가 많은 서버에서는 올릴 수 있습니다.
이상적으로는 설정이 일반적인 트랜잭션 시간을 초과해야 대기자(waiter)가 교착 상태를 확인하기로 결정하기 전에 잠금이 해제될 확률을 높일 수 있습니다. 수퍼유저만 이 설정을 변경할 수 있습니다.

log_lock_waits가 설정되면 이 매개변수는 잠금 대기에 대한 로그 메시지가 발행되기 전에 대기할 시간도 결정합니다.
잠금 지연을 조사하려는 경우 일반적인 deadlock_timeout보다 짧게 설정하는 것이 좋습니다.

max_locks_per_transaction(integer)
공유 잠금 테이블은 max_locks_per_transaction * (max_connections + max_prepared_transactions) 개체(예: 테이블)에 대한 잠금을 추적합니다.
따라서 한 번에 이만큼의 고유한 개체를 잠글 수 없습니다. 이 매개변수는 각 트랜잭션에 할당된 평균 개체 잠금 수를 제어합니다.
모든 트랜잭션의 잠금이 잠금 테이블에 맞는 한 개별 트랜잭션은 더 많은 개체를 잠글 수 있습니다. 이것은 잠글 수 있는 행 수가 아닙니다.
그 가치는 무제한입니다.
기본값인 64는 역사적으로 충분하다는 것이 입증되었지만 단일 트랜잭션에서 여러 다른 테이블을 다루는 쿼리(예: 많은 자식이 있는 상위 테이블의 쿼리)가 있는 경우 이 값을 높여야 할 수 있습니다.
이 매개변수는 서버 시작 시에만 설정할 수 있습니다.

대기 서버를 실행할 때 이 매개변수를 마스터 서버와 같거나 더 높은 값으로 설정해야 합니다. 그렇지 않으면 대기 서버에서 쿼리가 허용되지 않습니다.

max_pred_locks_per_transaction(정수)
공유 조건자 잠금 테이블은 max_pred_locks_per_transaction * (max_connections + max_prepared_transactions) 개체(예: 테이블)에 대한 잠금을 추적합니다.
따라서 한번에 이만큼의 고유한 개체를 잠글 수 없습니다. 이 매개변수는 각 트랜잭션에 할당된 평균 개체 잠금 수를 제어합니다.
모든 트랜잭션의 잠금이 잠금 테이블에 맞는 한 개별 트랜잭션은 더 많은 개체를 잠글 수 있습니다. 이것은 잠글 수 있는 행 수가 아닙니다.
그 가치는 무제한입니다. 기본값인 64는 일반적으로 테스트에 충분하지만 직렬화 가능한 단일 트랜잭션에서 여러 다른 테이블과 접촉하는 클라이언트가 있는 경우 이 값을 높여야 할 수도 있습니다.
이 매개변수는 서버 시작 시에만 설정할 수 있습니다.

max_pred_locks_per_relation(정수)
이것은 잠금이 전체 관계를 포함하도록 승격되기 전에 단일 관계의 얼마나 많은 페이지 또는 튜플이 술어로 잠길 수 있는지 제어합니다.
0보다 크거나 같은 값은 절대 제한을 의미하고 음수 값은 max_pred_locks_per_transaction을 이 설정의 절대 값으로 나눈 값을 의미합니다.
기본값은 -2이며 이전 버전의 PostgreSQL에서 동작을 유지합니다. 이 매개변수는 postgresql.conf 파일이나 서버 명령줄에서만 설정할 수 있습니다.

max_pred_locks_per_page(정수)
이는 잠금이 전체 페이지를 덮도록 승격되기 전에 단일 페이지에서 조건자로 잠글 수 있는 행 수를 제어합니다. 기본값은 2입니다.
이 매개변수는 postgresql.conf 파일이나 서버 명령줄에서만 설정할 수 있습니다.
